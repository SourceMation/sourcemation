<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on SourceMation</title><link>https://sourcemation.github.io/sourcemation/tags/kubernetes/</link><description>Recent content in Kubernetes on SourceMation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 09 Sep 2025 00:50:00 +0000</lastBuildDate><atom:link href="https://sourcemation.github.io/sourcemation/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Kyverno and Kubernetes Admission Controllers</title><link>https://sourcemation.github.io/sourcemation/blog/kyverno-installation-management/</link><pubDate>Tue, 09 Sep 2025 00:50:00 +0000</pubDate><guid>https://sourcemation.github.io/sourcemation/blog/kyverno-installation-management/</guid><description>&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;, the leading container orchestration platform, brings
immense flexibility but also new security challenges. As adoption grows,
robust security practices are no longer optional they&amp;rsquo;re critical.
While it&amp;rsquo;s possible to rely on individual users to adopt good
practices, this approach is often unrealistic. Security measures often
add complexity to developers&amp;rsquo; workflows, raising the barrier for
project onboarding and delivery. From their perspective, ensuring the
application functions correctly is the top priority, while security
often takes a back seat. An effective solution is a tool that
automatically verifies which objects are being applied to the cluster
and how. In other words, Kubernetes administrators should be empowered
to automatically control what is applied. One promising solution is
&lt;strong&gt;Kyverno&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>Kubernetes vs. Rancher and OpenShift - What's the Difference?</title><link>https://sourcemation.github.io/sourcemation/blog/kubernets-vs-rancher-and-openshift-whats-the-difference/</link><pubDate>Fri, 05 Sep 2025 14:30:00 +0000</pubDate><guid>https://sourcemation.github.io/sourcemation/blog/kubernets-vs-rancher-and-openshift-whats-the-difference/</guid><description>&lt;p&gt;&lt;strong&gt;When planning to implement containerization in an organization, we often choose to use Kubernetes. This choice is fully justified because Kubernetes is a well-established platform in the market, available under an open-source license, valued for its popularity, flexibility, security, and ease of management. Such an impression may arise after studying many materials about the benefits of containerization using Kubernetes. However, it is worth checking whether these positive features are truly fully aligned with reality. Let&amp;rsquo;s start with the basics: What is Kubernetes, and what underpins its popularity? When is it worth considering Rancher or OpenShift?&lt;/strong&gt;&lt;/p&gt;</description></item></channel></rss>